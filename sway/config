# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:WenQuanYi Micro Hei Lite 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Backlight
bindsym XF86MonBrightnessUp exec --no-startup-id light -A 2
bindsym XF86MonBrightnessDown exec --no-startup-id light -U 2

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
exec --no-startup-id xrdb -load ~/.Xresources
bindsym $mod+Return exec urxvt
bindsym $mod+Shift+Return exec emacs

# screenshot
bindsym $mod+Shift+Print exec grim -c - | swappy -f -
bindsym $mod+Print exec grim -g "$(slurp)" - | wl-copy
bindsym Print exec grim -c - | wl-copy

# kill focused window
bindsym $mod+q kill

# start program launcher
bindsym $mod+d exec dmenu_run -fn 'WenQuanYi Micro Hei Lite 8'  -b -m $(swaymsg -t get_outputs | jq 'map(.focused == true) | index(true)')

# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+t focus down
bindsym $mod+c focus up
bindsym $mod+n focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+t move down
bindsym $mod+Shift+c move up
bindsym $mod+Shift+n move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym $mod+greater move workspace to output right
bindsym $mod+less move workspace to output left

# split in horizontal orientation
bindsym $mod+period split h

# split in vertical orientation
bindsym $mod+comma split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+space floating toggle

# toggle sticky
bindsym $mod+z sticky toggle

# change focus between tiling / floating windows
bindsym $mod+tab focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+o focus child

# Make the currently focused window a scratchpad
bindsym $mod+m move scratchpad

# Show the first scratchpad window
bindsym $mod+b scratchpad show

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"

# switch to workspace
# bindsym $mod+F1 workspace number $ws1
# bindsym $mod+F2 workspace number $ws2
# bindsym $mod+F3 workspace number $ws3
# bindsym $mod+F4 workspace number $ws4
# bindsym $mod+F5 workspace number $ws5
# bindsym $mod+F6 workspace number $ws6
# bindsym $mod+F7 workspace number $ws7
# bindsym $mod+F8 workspace number $ws8
bindsym F1 workspace number $ws1
bindsym F2 workspace number $ws2
bindsym F3 workspace number $ws3
bindsym F4 workspace number $ws4
bindsym F5 workspace number $ws5
bindsym F6 workspace number $ws6
bindsym F7 workspace number $ws7
bindsym F8 workspace number $ws8

# move focused container to workspace
bindsym $mod+Shift+F1 move container to workspace number $ws1
bindsym $mod+Shift+F2 move container to workspace number $ws2
bindsym $mod+Shift+F3 move container to workspace number $ws3
bindsym $mod+Shift+F4 move container to workspace number $ws4
bindsym $mod+Shift+F5 move container to workspace number $ws5
bindsym $mod+Shift+F6 move container to workspace number $ws6
bindsym $mod+Shift+F7 move container to workspace number $ws7
bindsym $mod+Shift+F8 move container to workspace number $ws8

# reload the configuration file
bindsym $mod+Shift+l reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# bindsym $mod+l exec swaylock -c 000000
bindsym $mod+l exec xlock

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym t resize grow height 10 px or 10 ppt
        bindsym c resize shrink height 10 px or 10 ppt
        bindsym n resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

bindsym $mod+F10 swaylock -c "#000000"

bar {
    swaybar_command waybar
}

exec --no-startup-id fcitx5 -d
exec --no-startup-id mako &

input type:keyboard {
    xkb_layout "us"
    xkb_variant "dvp"
    xkb_options "ctrl:swapcaps"
}

input type:mouse {
    accel_profile "adaptive"
    pointer_accel "1.0"
}

input type:keyboard repeat_delay 180
input type:keyboard repeat_rate 40

default_border pixel 1

include $HOME/.sway
