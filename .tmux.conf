#### COLOUR (Solarized dark) 
# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green
# 0 is too far from ` ;)
set -g base-index 1

KEYTIMEOUT=1

# Automatically set window title
#set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g mouse-select-pane on
set-window-option -g mode-mouse on

## BASIC BEGIN

set-option -g status-position bottom

unbind-key C-b
set -g prefix 'M-\'
bind-key 'M-\' send-prefix

set -g default-terminal "screen-256color"
set -g status-keys vi
set -g history-limit 999

setw -g mode-keys vi
setw -g mode-mouse on
setw -g monitor-activity on

bind-key -t vi-edit C-u delete-line

# No delay for escape key press
set -s escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf
## BASIC END

set -g status-left '[#I.#P]'
set -g status-right '%H:%M'

## PASTE BEGIN
#Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l fish"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind -n M-y run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
## PASTE END

### KEYMAP BEGIN
bind -n M-r command-prompt "rename-window '%%'"
bind -n M-m command-prompt "move-window -t '%%'"

bind -n M-n next-window
bind -n M-p previous-window
#bind -n M-\ last-window
bind -n M-c new-window
bind -n M-w swap-pane -U
bind -n M-e swap-pane -D
#bind -n M-q kill-window

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

bind -n M-s split-window -v -c "#{pane_current_path}"
bind -n M-v split-window -h -c "#{pane_current_path}"

bind -n M-Left resize-pane -L 5
bind -n M-Right resize-pane -R 5
bind -n M-Up resize-pane -U 5
bind -n M-Down resize-pane -D 5
bind -n M-z resize-pane -Z

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -n M-Space if-shell "$is_vim" "" "copy-mode"
bind -n M-b if-shell "$is_vim" "send-keys M-b" "send-keys M-Left"
bind -n M-f if-shell "$is_vim" "send-keys M-f" "send-keys M-Right"

# KEYMAP END
