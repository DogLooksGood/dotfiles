set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg black
set -g status-bg default
#set -g status-fg default

set -g base-index 1
set -g pane-base-index 1

#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M

KEYTIMEOUT=1

set-window-option -g automatic-rename on
set-option -g set-titles on

unbind-key C-b
set -g prefix 'M-\'
bind-key 'M-\' send-prefix

set -g default-terminal "screen-256color"
set -g status-keys vi
set -g history-limit 15000

setw -g mode-keys vi
setw -g monitor-activity on
#set-option -g -q mouse on

bind-key -t vi-edit C-u delete-line

# No delay for escape key press
set -s escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf
## BASIC END

set -g status-interval 1
set -g status-left-length 70
set -g status-left "#[fg=yellow][#I.#P]"
set -g status-right "#[fg=cyan]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}')"

## PASTE BEGIN
#Copy-paste integration
#set-option -g default-command "reattach-to-user-namespace -l fish"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

#bind -n M-y run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
## PASTE END

### KEYMAP BEGIN
bind -n M-r command-prompt "rename-window '%%'"
bind -n M-m command-prompt "move-window -t '%%'"

bind -n M-n next-window
bind -n M-p previous-window
#bind -n M-\ last-window
bind -n M-t new-window
bind -n M-w swap-pane -U
bind -n M-e swap-pane -D
bind -n M-q display-panes

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9


bind -n M-Left resize-pane -L 5
bind -n M-Right resize-pane -R 5
bind -n M-Up resize-pane -U 5
bind -n M-Down resize-pane -D 5
#bind -n M-z resize-pane -Z

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -n M-Space if-shell "$is_vim" "" "copy-mode"
bind -n M-b if-shell "$is_vim" "send-keys M-b" "send-keys M-Left"
bind -n M-f if-shell "$is_vim" "send-keys M-f" "send-keys M-Right"

bind -n M-s split-window -v #-c "#{pane_current_path}"
bind -n M-v split-window -h #-c "#{pane_current_path}"
# KEYMAP END

