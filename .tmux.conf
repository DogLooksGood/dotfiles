# 0 is too far from ` ;)
set -g base-index 1

KEYTIMEOUT=1

# Automatically set window title
#set-window-option -g automatic-rename on
#set-option -g set-titles on
set-option -g mouse-select-pane on
#set-window-option -g mode-mouse on

## BASIC BEGIN
unbind-key C-b
set -g prefix 'C-Space'
bind-key 'C-Space' send-prefix

#set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 999

setw -g mode-keys vi
setw -g mode-mouse on
setw -g monitor-activity on

bind-key -t vi-edit C-u delete-line

# No delay for escape key press
set -s escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf
## BASIC END


## THEME BEGIN
#set -g status-bg black
#set -g status-fg white
#set -g window-status-current-bg white
#set -g window-status-current-fg black
set -g window-status-current-attr bold
#set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green]#(whoami) (#S) [#I.#P] '
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

# COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green
## THEME END

## PASTE BEGIN
#Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind -n M-y run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
## PASTE END

## KEYMAP BEGIN
bind -n M-, command-prompt -I "#W" "rename-window '%%'"
bind -n M-. command-prompt "move-window -t '%%'"

## KEYMAP END

## Navigator BEGIN
bind -n M-n next-window
bind -n M-p previous-window
bind -n M-\ last-window
bind -n M-c new-window
bind -n M-d kill-pane
bind -n M-[ swap-pane -U
bind -n M-] swap-pane -D
bind -n M-q kill-window

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

bind -n M-s split-window -v -c "#{pane_current_path}"
bind -n M-v split-window -h -c "#{pane_current_path}"

bind-key H resize-pane -L 5
bind-key L resize-pane -R 5
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5

bind -n M-Left resize-pane -L 5
bind -n M-Right resize-pane -R 5
bind -n M-Up resize-pane -U 5
bind -n M-Down resize-pane -D 5

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys ^H" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys ^J" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys ^K" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys ^L" "select-pane -R"
bind -n M-Space if-shell "$is_vim" "" "copy-mode"
## Navigator END

